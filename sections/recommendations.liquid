<div class="product-recommendations" data-url="{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{ product.id }}&limit=4" >
	{%- if recommendations.performed and recommendations.products_count > 0 -%}
	<h2>You may also like</h2>
	<ul>
		{%- for product in recommendations.products -%}
		{% render 'product-card' prod: product %}
		{%- endfor -%}
	</ul>
	{%- endif -%}
</div>



{% javascript %}
    const handleIntersection = (entries, observer) => {
        if (!entries[0].isIntersecting) return;
        observer.unobserve(productRecommendationsSection);
        const url = productRecommendationsSection.dataset.url;
        fetch(url)
            .then(response => response.text())
            .then(text => {
                const html = document.createElement('div');
                html.innerHTML = text;
                const recommendations = html.querySelector('.product-recommendations');
                if (recommendations && recommendations.innerHTML.trim().length) {
                    productRecommendationsSection.innerHTML = recommendations.innerHTML;
                }
            })
            .catch(e => {
                console.error(e);
            });
    };
    const productRecommendationsSection = document.querySelector('.product-recommendations');
    const observer = new IntersectionObserver(handleIntersection, {
        rootMargin: '0px 0px 200px 0px'
    });
    observer.observe(productRecommendationsSection);
{% endjavascript %}


{% schema %}
    {
        "name": "Product recommendations",
        "settings": []
    }
{% endschema %}